name: Build and Release RetroBat

on:
  push:
    branches:
      - main
      - dev
      - '*'   # facultatif : toutes les branches, sinon prÃ©cise celles que tu veux

jobs:
  build:
    runs-on: windows-latest

    env:
      Solution_Name: RetroBat/RetroBat.sln
      Release_Name: RetroBat-${{ github.ref_name }}   # Release diffÃ©rente par branche

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Installer MSBuild
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    # Installer .NET Framework 4.8.1 Targeting Pack
    - name: Add .NET Framework Developer Pack
      run: choco install netfx-4.8.1-devpack -y

    # Restore NuGet
    - name: Restore NuGet packages
      run: nuget restore $env:Solution_Name

    # Build Release seulement
    - name: Build solution (Release)
      run: msbuild $env:Solution_Name /p:Configuration=Release /p:Platform="Any CPU" /verbosity:minimal

    # Zipper les binaires
    - name: Zip build output
      run: |
        mkdir output
        powershell Compress-Archive -Path **/bin/Release/* -DestinationPath output/RetroBat-${{ github.ref_name }}.zip -Force

    # CrÃ©er / mettre Ã  jour la release GitHub
    - name: Create or Update GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        name: ${{ env.Release_Name }}
        body: |
          ðŸš€ Build automatique pour la branche `${{ github.ref_name }}`
        files: |
          output/RetroBat-${{ github.ref_name }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
